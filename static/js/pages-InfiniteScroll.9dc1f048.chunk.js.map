{"version":3,"file":"static/js/pages-InfiniteScroll.9dc1f048.chunk.js","mappings":"uPAiDA,UA5C2B,WACzB,OAAsBA,EAAAA,EAAAA,UAAS,IAA/B,eAAKC,EAAL,KAAYC,EAAZ,KAEA,GAAsBF,EAAAA,EAAAA,UAAS,GAA/B,eAAKG,EAAL,KAAWC,EAAX,KAEA,GAAkCJ,EAAAA,EAAAA,UAAS,GAA3C,eAAKK,EAAL,KAAiBC,EAAjB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,MACC,CAACL,IAEJ,IAAMK,EAAM,yCAAG,0GACTC,EAAS,CACXC,KAAMP,EACNQ,MAAO,IAHI,mBAQDC,EAAAA,EAAAA,aAAY,CAAEH,OAAAA,IARb,oBAOTI,KAAeA,EAPN,EAODZ,MAAaa,EAPZ,EAOYA,MAAOH,EAPnB,EAOmBA,MAE9BT,EAAO,GAAD,eAAKD,IAAL,OAAeY,KACrBP,EAAcS,KAAKC,KAAKF,EAAQH,IAVrB,mDAYXM,EAAAA,EAAAA,OAAM,CAAEC,KAAM,QAASC,QAAS,KAAMN,KAAKM,UAZhC,0DAAH,qDAoBZ,OACE,gBAAKC,UAAU,MAAf,UACE,gBAAKA,UAAU,WAAf,UACE,SAAC,EAAAC,eAAD,CAAgBC,WAPH,WACjBlB,GAAQ,SAACmB,GAAD,OAAUA,EAAO,MAMmBC,YAAarB,EAAOE,EAA5D,SACGJ,EAAMwB,KAAI,WAAkBC,GAAW,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KACnB,OAAO,SAAC,EAAAC,UAAD,CAAuBF,MAAOA,EAAOG,QAASF,GAA9BF,c,wMCtCtBK,EAAa,SAAC,GAAgC,IAA9BlB,EAA6B,EAA7BA,KAAMmB,EAAuB,EAAvBA,iBACjC,OAAOC,EAAAA,EAAAA,cAAa,CAClBC,OAAQ,OACRC,IAAKC,EAAAA,UAAAA,YACLvB,KAAAA,EACAmB,iBAAAA,KAISK,EAAiB,WAC5B,OAAOJ,EAAAA,EAAAA,cAAa,CAClBC,OAAQ,MACRC,IAAKC,EAAAA,UAAAA,oBAIIxB,EAAc,SAAC,GAAgB,IAAdH,EAAa,EAAbA,OAC5B,OAAOwB,EAAAA,EAAAA,cAAa,CAClBC,OAAQ,MACRC,IAAKC,EAAAA,UAAAA,cACL3B,OAAAA,KAIS6B,EAAiB,WAC5B,OAAOL,EAAAA,EAAAA,cAAa,CAClBC,OAAQ,MACRC,IAAKC,EAAAA,UAAAA,iB,sFC5BIH,E,MAAeM,GAAAA,SAE5BN,EAAaO,aAAaC,QAAQC,KAChC,SAACC,GAKC,OAAOA,KAET,SAACC,GACC,OAAOC,QAAQC,OAAOF,MAI1BX,EAAaO,aAAaO,SAASL,KACjC,SAACK,GACC,OAAOA,KAET,SAACH,GAKC,OAJ8B,MAA1BA,EAAMG,SAASC,SACjBC,aAAaC,QACbC,OAAOC,SAASC,KAAO,KAElBR,QAAQC,OAAOF,EAAMG,c,qEC1BzB,IAAMX,EAAY,CACvBkB,YAAa,0DACbC,iBAAkB,iCAClBC,cAAe,8BACfC,aAAc","sources":["pages/InfiniteScroll/index.js","service/Api/index.js","service/axiosInstance.js","service/endpoints.js"],"sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { getAllPosts } from \"service/Api\";\nimport { toast } from \"utils\";\nimport { Accordain, InfiniteScroll } from \"components\";\n\nconst InfiniteScrollPage = () => {\n  let [posts, setFaq] = useState([]);\n\n  let [page, setPage] = useState(1);\n\n  let [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    getFaq();\n  }, [page]);\n\n  const getFaq = async () => {\n    let params = {\n      skip: page,\n      limit: 15,\n    };\n    try {\n      let {\n        data: { posts: data, total, limit },\n      } = await getAllPosts({ params });\n      setFaq([...posts, ...data]);\n      setTotalPages(Math.ceil(total / limit));\n    } catch (error) {\n      toast({ type: \"error\", message: error.data.message });\n    }\n  };\n\n  const handlePage = () => {\n    setPage((prev) => prev + 1);\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-6\">\n        <InfiniteScroll onLoadMore={handlePage} hasNextPage={page < totalPages}>\n          {posts.map(({ title, body }, index) => {\n            return <Accordain key={index} title={title} content={body} />;\n          })}\n        </InfiniteScroll>\n      </div>\n    </div>\n  );\n};\n\nexport default InfiniteScrollPage;\n","import { axiosIntance } from \"service/axiosInstance\";\nimport { endpoints } from \"service/endpoints\";\n\nexport const fileUpload = ({ data, onUploadProgress }) => {\n  return axiosIntance({\n    method: \"post\",\n    url: endpoints.FILE_UPLOAD,\n    data,\n    onUploadProgress,\n  });\n};\n\nexport const getAllProducts = () => {\n  return axiosIntance({\n    method: \"get\",\n    url: endpoints.GET_ALL_PRODUCTS,\n  });\n};\n\nexport const getAllPosts = ({ params }) => {\n  return axiosIntance({\n    method: \"get\",\n    url: endpoints.GET_ALL_POSTS,\n    params,\n  });\n};\n\nexport const getProductList = () => {\n  return axiosIntance({\n    method: \"get\",\n    url: endpoints.PRODUCT_LIST,\n  });\n};\n","import axios from \"axios\";\n\nexport const axiosIntance = axios.create();\n\naxiosIntance.interceptors.request.use(\n  (config) => {\n    // const token = localStorage.getItem(\"token\");\n    // if (token) {\n    //   config.headers.Authorization = token;\n    // }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\naxiosIntance.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response.status === 401) {\n      localStorage.clear();\n      window.location.href = \"/\";\n    }\n    return Promise.reject(error.response);\n  }\n);\n","export const endpoints = {\n  FILE_UPLOAD: \"http://doodlebluelive.com:2319/api/v1/upload/uploadFile\",\n  GET_ALL_PRODUCTS: \"https://dummyjson.com/products\",\n  GET_ALL_POSTS: \"https://dummyjson.com/posts\",\n  PRODUCT_LIST: \"https://fakestoreapi.com/products\",\n};\n"],"names":["useState","posts","setFaq","page","setPage","totalPages","setTotalPages","useEffect","getFaq","params","skip","limit","getAllPosts","data","total","Math","ceil","toast","type","message","className","InfiniteScroll","onLoadMore","prev","hasNextPage","map","index","title","body","Accordain","content","fileUpload","onUploadProgress","axiosIntance","method","url","endpoints","getAllProducts","getProductList","axios","interceptors","request","use","config","error","Promise","reject","response","status","localStorage","clear","window","location","href","FILE_UPLOAD","GET_ALL_PRODUCTS","GET_ALL_POSTS","PRODUCT_LIST"],"sourceRoot":""}