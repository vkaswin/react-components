{"version":3,"file":"static/js/hooks-useWindowSize.0d5d1d0a.chunk.js","mappings":"kNAEaA,EAAgB,WAC3B,MAAoCC,OAA5BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,YAEpB,GAAoCC,EAAAA,EAAAA,UAAS,CAC3CC,MAAOH,EACPI,OAAQH,IAFV,eAAOI,EAAP,KAAmBC,EAAnB,MAKAC,EAAAA,EAAAA,YAAU,WAER,OADAR,OAAOS,iBAAiB,SAAUC,GAC3B,kBAAMV,OAAOW,oBAAoB,SAAUD,MACjD,IAEH,IAAMA,EAAe,SAAC,GAA6C,IAAD,IAA1CE,OAAUX,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,YAC5CK,GAAc,kBAAKD,GAAN,IAAkBF,MAAOH,EAAYI,OAAQH,MAG5D,MAAO,CAAEE,MAAOE,EAAWF,MAAOC,OAAQC,EAAWD","sources":["hooks/useWindowSize.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport const useWindowSize = () => {\n  const { innerWidth, innerHeight } = window;\n\n  const [windowSize, setWindowSize] = useState({\n    width: innerWidth,\n    height: innerHeight,\n  });\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const handleResize = ({ target: { innerWidth, innerHeight } }) => {\n    setWindowSize({ ...windowSize, width: innerWidth, height: innerHeight });\n  };\n\n  return { width: windowSize.width, height: windowSize.height };\n};\n"],"names":["useWindowSize","window","innerWidth","innerHeight","useState","width","height","windowSize","setWindowSize","useEffect","addEventListener","handleResize","removeEventListener","target"],"sourceRoot":""}