{"version":3,"file":"static/js/components-SearchBox.fea630cd.chunk.js","mappings":"4MA0GA,UAtGkB,SAAC,GAUZ,IAAD,IATJA,YAAAA,OASI,MATU,cASV,MARJC,WAAAA,OAQI,MARS,GAQT,EAPJC,EAOI,EAPJA,SACAC,EAMI,EANJA,SAMI,IALJC,YAAAA,OAKI,aAJJC,QAAAA,OAII,aAHJC,SAAAA,OAGI,MAHO,KAGP,MAFJC,QAAAA,OAEI,MAFM,KAEN,EADJC,EACI,EADJA,SAEA,GAAmBC,EAAAA,EAAAA,YAAZC,GAAP,eACA,GAA0BD,EAAAA,EAAAA,WAAS,GAAnC,eAAKE,EAAL,KAAaC,EAAb,KACA,GAAoCH,EAAAA,EAAAA,WAAU,GAA9C,eAAKI,EAAL,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WAER,OADAC,OAAOC,iBAAiB,YAAaC,GAC9B,WACLF,OAAOG,oBAAoB,YAAaD,MAEzC,IAEH,IAAIE,GAAYC,EAAAA,EAAAA,QAAO,MAEnBC,GAAkBD,EAAAA,EAAAA,QAAO,MAEvBH,EAAqB,SAACK,GACtBH,IAAcA,EAAUI,QAAQC,SAASF,EAAMG,SACjDd,GAAU,IAIRe,EAAY,yCAAG,WAAOC,GAAP,sFACb1B,EAAS0B,EAAEF,OAAOG,OADL,OAEnBnB,EAASoB,KAAKC,UAFK,2CAAH,uDASlBhB,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACdO,EAAgBE,QAAQQ,SAAS,CAC/BC,IAAG,UAAEX,EAAgBE,QAAQhB,SAASK,UAAnC,aAAE,EAA+CqB,UACpDC,SAAU,aAEX,CAACtB,IAwBJ,OACE,iCACE,iBAAKuB,UAAU,uBAAuBC,IAAKjB,EAA3C,WACE,kBACEgB,UAAU,eACVE,KAAK,OACLT,MAAO5B,EACPD,YAAaA,EACbE,SAAUyB,EACVY,QA/BY,WAClB3B,GAAU,IA+BJ4B,QA5Bc,SAACZ,GACP,cAAVA,EAAEa,KACA5B,EAAcL,EAASkC,SACzBpC,EAASO,EAAc,GACvBC,EAAeD,EAAc,IAGnB,YAAVe,EAAEa,KACA5B,EAAc,IAChBP,EAASO,EAAc,GACvBC,EAAeD,EAAc,IAGnB,UAAVe,EAAEa,KACJlC,KAeIoC,UAAWvC,KAEb,cAAGgC,UAAU,eAAeQ,QAAS,WA7CzCzC,QA8CI,gBACEiC,UAAU,oBACVC,IAAKf,EACLuB,MAAO,CAAEC,QAASnC,GAAyB,KAAfV,EAAoB,IAAM,KAHxD,SAKGO,OAGJH,GAA0B,KAAfJ,IACV,gBACEmC,UAAU,iBACVS,MAAO,CAAEE,QAASpC,EAAS,QAAU,e,6BClG/C","sources":["components/SearchBox/index.js","webpack://react-components/./src/components/SearchBox/SearchBox.scss?f954"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nimport \"./SearchBox.scss\";\n\nconst SearchBox = ({\n  placeholder = \"Search here\",\n  inputValue = \"\",\n  onChange,\n  onSearch,\n  isAutoFoucs = false,\n  overlay = false,\n  isActive = null,\n  onEnter = null,\n  children,\n}) => {\n  let [, setState] = useState();\n  let [isOpen, setIsOpen] = useState(false);\n  let [activeIndex, setActiveIndex] = useState(-1);\n\n  useEffect(() => {\n    window.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  let searchRef = useRef(null);\n\n  let searchResultRef = useRef(null);\n\n  const handleClickOutside = (event) => {\n    if (searchRef && !searchRef.current.contains(event.target)) {\n      setIsOpen(false);\n    }\n  };\n\n  const handleChange = async (e) => {\n    await onChange(e.target.value);\n    setState(Math.random());\n  };\n\n  const handleSearch = () => {\n    onSearch();\n  };\n\n  useEffect(() => {\n    searchResultRef.current.scrollTo({\n      top: searchResultRef.current.children[activeIndex]?.offsetTop,\n      behavior: \"smooth\",\n    });\n  }, [activeIndex]);\n\n  const handleFocus = () => {\n    setIsOpen(true);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"ArrowDown\") {\n      if (activeIndex < children.length) {\n        isActive(activeIndex + 1);\n        setActiveIndex(activeIndex + 1);\n      }\n    }\n    if (e.key === \"ArrowUp\") {\n      if (activeIndex > 1) {\n        isActive(activeIndex - 1);\n        setActiveIndex(activeIndex - 1);\n      }\n    }\n    if (e.key === \"Enter\") {\n      onEnter();\n    }\n  };\n\n  return (\n    <>\n      <div className=\"search-box-container\" ref={searchRef}>\n        <input\n          className=\"search-input\"\n          type=\"text\"\n          value={inputValue}\n          placeholder={placeholder}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onKeyUp={handleKeyDown}\n          autoFocus={isAutoFoucs}\n        />\n        <i className=\"fa fa-search\" onClick={() => handleSearch()}></i>\n        <div\n          className=\"search-result-box\"\n          ref={searchResultRef}\n          style={{ opacity: isOpen && inputValue !== \"\" ? \"1\" : \"0\" }}\n        >\n          {children}\n        </div>\n      </div>\n      {overlay && inputValue !== \"\" && (\n        <div\n          className=\"search-overlay\"\n          style={{ display: isOpen ? \"block\" : \"none\" }}\n        ></div>\n      )}\n    </>\n  );\n};\n\nexport default SearchBox;\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["placeholder","inputValue","onChange","onSearch","isAutoFoucs","overlay","isActive","onEnter","children","useState","setState","isOpen","setIsOpen","activeIndex","setActiveIndex","useEffect","window","addEventListener","handleClickOutside","removeEventListener","searchRef","useRef","searchResultRef","event","current","contains","target","handleChange","e","value","Math","random","scrollTo","top","offsetTop","behavior","className","ref","type","onFocus","onKeyUp","key","length","autoFocus","onClick","style","opacity","display"],"sourceRoot":""}