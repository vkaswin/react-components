{"version":3,"file":"static/js/pages-FormValidation.7094dc77.chunk.js","mappings":"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","sources":["hooks/useButtonLoader.js","hooks/useClickOnOutSide.js","hooks/useCookies.js","hooks/useForm.js","hooks/useLocalStorage.js","hooks/useObserver.js","hooks/useRouter.js","hooks/useSessionStorage.js","hooks/useWindowSize.js","pages/FormValidation/index.js","webpack://react-components/./src/pages/FormValidation/FormValidation.scss?7a85"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nexport const useButtonLoader = (buttonText = \"Click Me\") => {\n  const [loading, setLoading] = useState(false);\n\n  const buttonRef = useRef();\n\n  useEffect(() => {\n    if (loading) {\n      buttonRef.current.disabled = true;\n      buttonRef.current.innerHTML =\n        'Loading <i class=\"fas fa-spinner fa-spin\"></i>';\n    } else {\n      buttonRef.current.disabled = false;\n      buttonRef.current.innerHTML = buttonText;\n    }\n  }, [loading]);\n\n  return [buttonRef, setLoading];\n};\n","export const useOnClickOutSide = (ref, cb) => {\n  const observe = () => {\n    document.addEventListener(\"click\", handleClickOutSide);\n  };\n\n  const unObserve = () => {\n    document.removeEventListener(\"click\", handleClickOutSide);\n  };\n\n  const handleClickOutSide = ({ target }) => {\n    if (ref?.current && !ref.current.contains(target)) {\n      unObserve();\n      cb();\n    }\n  };\n\n  return [observe, unObserve];\n};\n","export const useCookies = () => {\n  const setCookie = ({ name, value, days }) => {\n    let expireDate = new Date();\n    expireDate.setTime(expireDate.getTime() + days * 24 * 60 * 60 * 1000);\n    let expires = \"; expires=\" + expireDate.toUTCString();\n    document.cookie = name + \"=\" + value + expires + \"; path=/\";\n  };\n\n  const getCookie = (name) => {\n    let match = document.cookie.match(new RegExp(\"(^| )\" + name + \"=([^;]+)\"));\n    if (match) {\n      return match[2];\n    } else {\n      return null;\n    }\n  };\n\n  const clearCookie = (name) => {\n    document.cookie =\n      name + \"=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n  };\n\n  return {\n    setCookie: setCookie,\n    getCookie: getCookie,\n    clearCookie: clearCookie,\n  };\n};\n","import { useCallback, useEffect, useRef, useState } from \"react\";\n\nexport const useForm = () => {\n  const formFields = useRef([]);\n\n  const validate = useRef(false);\n\n  const formFieldsByName = useRef([]);\n\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    document.addEventListener(\"input\", handleChange);\n    return () => document.removeEventListener(\"input\", handleChange);\n  }, []);\n\n  const register = useCallback(\n    ({\n        required = false,\n        minLength = null,\n        maxLength = null,\n        isNumber = false,\n        pattern = null,\n      }) =>\n      (ref) => {\n        if ((!ref && !ref?.name) || formFieldsByName.current.includes(ref.name))\n          return;\n        formFields.current.push({\n          rules: { required, minLength, maxLength, isNumber, pattern },\n          ref,\n          name: ref.name,\n        });\n        formFieldsByName.current.push(ref.name);\n      },\n    []\n  );\n\n  const handleChange = ({ target: { name, value } }) => {\n    if (!validate.current) return;\n\n    const formError = handleValidate({ name, value });\n\n    if (Object.keys(formError).length === 0) {\n      setErrors((prev) => {\n        delete prev[name];\n        return { ...prev };\n      });\n    } else {\n      setErrors((prev) => {\n        return { ...prev, ...formError };\n      });\n    }\n  };\n\n  const handleSubmit = (cb) => () => {\n    validate.current = true;\n\n    const formErrors = formFields.current.reduce(\n      (initial, { name, ref: { value } }) => {\n        return { ...initial, ...handleValidate({ name, value }) };\n      },\n      {}\n    );\n\n    setErrors((prev) => {\n      if (Object.keys(formErrors).length === 0) {\n        let data = {};\n\n        formFields.current.forEach(\n          ({ rules: { isNumber }, ref: { value }, name }) => {\n            data[name] = isNumber ? parseInt(value) : value;\n          }\n        );\n\n        cb(data);\n      }\n      return { ...prev, ...formErrors };\n    });\n  };\n\n  const handleValidate = ({ name, value }) => {\n    const formError = {};\n\n    const {\n      rules: {\n        required = null,\n        minLength = null,\n        maxLength = null,\n        pattern = null,\n      } = {},\n      ref = null,\n    } =\n      formFields.current.find(({ name: fieldName }) => fieldName === name) ??\n      {};\n\n    if (ref === null) return;\n\n    if (required && String(value).trim() == \"\") {\n      formError[name] = { type: \"required\", ref };\n      return formError;\n    }\n    if (minLength && String(value.length).trim() < minLength) {\n      formError[name] = { type: \"minLength\", ref };\n      return formError;\n    }\n    if (maxLength && String(value.length).trim() > maxLength) {\n      formError[name] = { type: \"maxLength\", ref };\n      return formError;\n    }\n    if (pattern && !RegExp(pattern).test(value)) {\n      formError[name] = { type: \"pattern\", ref };\n      return formError;\n    }\n\n    return formError;\n  };\n\n  const getValue = (fieldName = \"\") => {\n    let formValue = formFields.current.find(({ name }) => {\n      return fieldName === name;\n    });\n    return formValue ? formValue?.ref.value : \"\";\n  };\n\n  const setValue = (fieldName) => {\n    console.log(fieldName);\n  };\n\n  const setError = (fieldName) => {\n    console.log(fieldName);\n  };\n\n  const clearError = (fieldName) => {\n    console.log(fieldName);\n  };\n\n  const reset = () => {\n    formFields.current.forEach(({ ref }) => {\n      ref.value = \"\";\n    });\n  };\n\n  return {\n    errors: errors,\n    register: register,\n    handleSubmit: handleSubmit,\n    getValue: getValue,\n    setValue: setValue,\n    reset: reset,\n    setError: setError,\n    clearError: clearError,\n  };\n};\n","export const useLocalStorage = () => {\n  const getValue = (key) => {\n    return JSON.parse(localStorage.getItem(key));\n  };\n\n  const setValue = ({ key = \"\", value = \"\" }) => {\n    localStorage.setItem(key, JSON.stringify(value));\n  };\n\n  const remove = (key) => {\n    localStorage.removeItem(key);\n  };\n\n  const reset = () => {\n    localStorage.clear();\n  };\n\n  return {\n    getItem: getValue,\n    setItem: setValue,\n    removeItem: remove,\n    reset: reset,\n  };\n};\n","import { useEffect, useRef, useState } from \"react\";\n\nexport const useObserver = () => {\n  let observerRef = useRef();\n\n  let [isVisible, setIsVisible] = useState(false);\n\n  const options = { root: null, rootMargin: \"0px\", threshold: 1 };\n\n  useEffect(() => {\n    let observer = new IntersectionObserver(handleObserver, options);\n    if (observerRef.current) {\n      observer.observe(observerRef.current);\n    }\n    return () => {\n      if (observerRef.current) {\n        observer.unobserve(observerRef.current);\n      }\n    };\n  }, []);\n\n  const handleObserver = ([event]) => {\n    setIsVisible(event.isIntersecting);\n  };\n\n  return { observerRef, isVisible };\n};\n","import { useNavigate, useLocation, useParams } from \"react-router-dom\";\nimport { parseQuery } from \"utils\";\n\nexport const useRouter = () => {\n  const navigate = useNavigate();\n\n  const location = useLocation();\n\n  const params = useParams();\n\n  return {\n    push: navigate,\n    goBack: () => navigate(-1),\n    pathName: location.pathname,\n    query: {\n      ...parseQuery(location.search),\n      ...params,\n    },\n  };\n};\n","export const useSessionStorage = () => {\n  const getValue = (key) => {\n    return JSON.parse(sessionStorage.getItem(key));\n  };\n\n  const setValue = ({ key = \"\", value = \"\" }) => {\n    sessionStorage.setItem(key, JSON.stringify(value));\n  };\n\n  const remove = (key) => {\n    sessionStorage.removeItem(key);\n  };\n\n  const reset = () => {\n    sessionStorage.clear();\n  };\n\n  return {\n    getItem: getValue,\n    setItem: setValue,\n    removeItem: remove,\n    reset: reset,\n  };\n};\n","import React, { useState, useEffect } from \"react\";\n\nexport const useWindowSize = () => {\n  const { innerWidth, innerHeight } = window;\n\n  const [windowSize, setWindowSize] = useState({\n    width: innerWidth,\n    height: innerHeight,\n  });\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const handleResize = ({ target: { innerWidth, innerHeight } }) => {\n    setWindowSize({ ...windowSize, width: innerWidth, height: innerHeight });\n  };\n\n  return { width: windowSize.width, height: windowSize.height };\n};\n","import React, { Fragment } from \"react\";\nimport { useForm } from \"hooks\";\n\nimport \"./FormValidation.scss\";\n\nconst states = {\n  AN: \"Andaman and Nicobar Islands\",\n  AP: \"Andhra Pradesh\",\n  AR: \"Arunachal Pradesh\",\n  AS: \"Assam\",\n  BR: \"Bihar\",\n  CG: \"Chandigarh\",\n  CH: \"Chhattisgarh\",\n  DN: \"Dadra and Nagar Haveli\",\n  DD: \"Daman and Diu\",\n  DL: \"Delhi\",\n  GA: \"Goa\",\n  GJ: \"Gujarat\",\n  HR: \"Haryana\",\n  HP: \"Himachal Pradesh\",\n  JK: \"Jammu and Kashmir\",\n  JH: \"Jharkhand\",\n  KA: \"Karnataka\",\n  KL: \"Kerala\",\n  LA: \"Ladakh\",\n  LD: \"Lakshadweep\",\n  MP: \"Madhya Pradesh\",\n  MH: \"Maharashtra\",\n  MN: \"Manipur\",\n  ML: \"Meghalaya\",\n  MZ: \"Mizoram\",\n  NL: \"Nagaland\",\n  OR: \"Odisha\",\n  PY: \"Puducherry\",\n  PB: \"Punjab\",\n  RJ: \"Rajasthan\",\n  SK: \"Sikkim\",\n  TN: \"Tamil Nadu\",\n  TS: \"Telangana\",\n  TR: \"Tripura\",\n  UP: \"Uttar Pradesh\",\n  UK: \"Uttarakhand\",\n  WB: \"West Bengal\",\n};\n\nconst FormValidationPage = () => {\n  const { errors, register, handleSubmit, reset, getValue } = useForm();\n\n  const onSubmit = (data) => {\n    console.log(data);\n    reset();\n  };\n\n  const ErrorMessage = ({ error, message }) => {\n    if (!error) return null;\n    return error && <span className=\"error-msg\">{message[error.type]}</span>;\n  };\n\n  return (\n    <Fragment>\n      <h1>Form Validation</h1>\n      <div className=\"row\">\n        <div className=\"col-md-4 mb-3\">\n          <label className=\"form-label\">Username</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Enter username\"\n            name=\"userName\"\n            ref={register({ required: true })}\n            autoComplete=\"off\"\n          />\n          <ErrorMessage\n            error={errors?.userName}\n            message={{ required: \"Please enter username\" }}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-4 mb-3\">\n          <label className=\"form-label\">Email ID</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Enter email id\"\n            name=\"emailId\"\n            ref={register({\n              required: true,\n              pattern:\n                /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/,\n            })}\n            autoComplete=\"off\"\n          />\n          <ErrorMessage\n            error={errors?.emailId}\n            message={{\n              required: \"Please enter email id\",\n              pattern: \"Invalid email id\",\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-4 mb-3\">\n          <label className=\"form-label\">Phone Number</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Enter phone number\"\n            name=\"phone\"\n            maxLength={10}\n            required\n            ref={register({\n              required: true,\n              isNumber: true,\n              pattern: /^[0-9]{10}$/,\n              minLength: 10,\n            })}\n            autoComplete=\"off\"\n          />\n          <ErrorMessage\n            error={errors?.phone}\n            message={{\n              required: \"Please enter phone number\",\n              pattern: \"Phone number should contain number only\",\n              minLength: \"Phone number should contain atleast 10 digit\",\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-4 mb-3\">\n          <label className=\"form-label\">State</label>\n          <select\n            name=\"state\"\n            ref={register({ required: true })}\n            className=\"form-select\"\n            defaultValue=\"\"\n          >\n            <option value=\"\" disabled>\n              Select State\n            </option>\n            {Object.values(states).map((state, index) => {\n              return (\n                <option key={index} value={state}>\n                  {state}\n                </option>\n              );\n            })}\n          </select>\n          <ErrorMessage\n            error={errors?.state}\n            message={{ required: \"Please select state\" }}\n          />\n        </div>\n      </div>\n      {/* <input type=\"radio\" name=\"gender\" value=\"Male\" /> Male\n      <input type=\"radio\" name=\"gender\" value=\"Female\" /> Female */}\n      <button onClick={handleSubmit(onSubmit)}>Submit</button>\n    </Fragment>\n  );\n};\n\nexport default FormValidationPage;\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["useButtonLoader","buttonText","useState","loading","setLoading","buttonRef","useRef","useEffect","current","disabled","innerHTML","useOnClickOutSide","ref","cb","unObserve","document","removeEventListener","handleClickOutSide","target","contains","addEventListener","useCookies","setCookie","name","value","days","expireDate","Date","setTime","getTime","expires","toUTCString","cookie","getCookie","match","RegExp","clearCookie","useForm","formFields","validate","formFieldsByName","errors","setErrors","handleChange","register","useCallback","required","minLength","maxLength","isNumber","pattern","includes","push","rules","formError","handleValidate","Object","keys","length","prev","find","String","trim","type","test","handleSubmit","formErrors","reduce","initial","data","forEach","parseInt","getValue","fieldName","formValue","setValue","console","log","reset","setError","clearError","useLocalStorage","getItem","key","JSON","parse","localStorage","setItem","stringify","removeItem","clear","useObserver","observerRef","isVisible","setIsVisible","options","root","rootMargin","threshold","observer","IntersectionObserver","handleObserver","observe","unobserve","event","isIntersecting","useRouter","navigate","useNavigate","location","useLocation","params","useParams","goBack","pathName","pathname","query","parseQuery","search","useSessionStorage","sessionStorage","useWindowSize","window","innerWidth","innerHeight","width","height","windowSize","setWindowSize","handleResize","states","AN","AP","AR","AS","BR","CG","CH","DN","DD","DL","GA","GJ","HR","HP","JK","JH","KA","KL","LA","LD","MP","MH","MN","ML","MZ","NL","OR","PY","PB","RJ","SK","TN","TS","TR","UP","UK","WB","ErrorMessage","error","message","className","Fragment","placeholder","autoComplete","userName","emailId","phone","defaultValue","values","map","state","index","onClick"],"sourceRoot":""}