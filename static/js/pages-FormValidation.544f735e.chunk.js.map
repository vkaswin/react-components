{"version":3,"file":"static/js/pages-FormValidation.544f735e.chunk.js","mappings":"uLAKMA,EAAS,CACbC,GAAI,8BACJC,GAAI,iBACJC,GAAI,oBACJC,GAAI,QACJC,GAAI,QACJC,GAAI,aACJC,GAAI,eACJC,GAAI,yBACJC,GAAI,gBACJC,GAAI,QACJC,GAAI,MACJC,GAAI,UACJC,GAAI,UACJC,GAAI,mBACJC,GAAI,oBACJC,GAAI,YACJC,GAAI,YACJC,GAAI,SACJC,GAAI,SACJC,GAAI,cACJC,GAAI,iBACJC,GAAI,cACJC,GAAI,UACJC,GAAI,YACJC,GAAI,UACJC,GAAI,WACJC,GAAI,SACJC,GAAI,aACJC,GAAI,SACJC,GAAI,YACJC,GAAI,SACJC,GAAI,aACJC,GAAI,YACJC,GAAI,UACJC,GAAI,gBACJC,GAAI,cACJC,GAAI,eAyHN,UAtH2B,WACzB,OAA4DC,EAAAA,EAAAA,WAApDC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,SAAUC,EAA1B,EAA0BA,aAAcC,EAAxC,EAAwCA,MAOlCC,GAPN,EAA+CC,SAO1B,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC7B,OAAKD,EACEA,IAAS,iBAAME,UAAU,YAAhB,SAA6BD,EAAQD,EAAMG,QADxC,OAIrB,OACE,UAAC,EAAAC,SAAD,YACE,6CACA,gBAAKF,UAAU,MAAf,UACE,iBAAKA,UAAU,gBAAf,WACE,kBAAOA,UAAU,aAAjB,uBACA,kBACEC,KAAK,OACLD,UAAU,eACVG,YAAY,iBACZC,KAAK,WACLC,IAAKZ,EAAS,CAAEa,UAAU,IAC1BC,aAAa,SAEf,SAACX,EAAD,CACEE,MAAK,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAQgB,SACfT,QAAS,CAAEO,SAAU,iCAI3B,gBAAKN,UAAU,MAAf,UACE,iBAAKA,UAAU,gBAAf,WACE,kBAAOA,UAAU,aAAjB,uBACA,kBACEC,KAAK,OACLD,UAAU,eACVG,YAAY,iBACZC,KAAK,UACLC,IAAKZ,EAAS,CACZa,UAAU,EACVG,QACE,gEAEJF,aAAa,SAEf,SAACX,EAAD,CACEE,MAAK,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAQkB,QACfX,QAAS,CACPO,SAAU,wBACVG,QAAS,4BAKjB,gBAAKT,UAAU,MAAf,UACE,iBAAKA,UAAU,gBAAf,WACE,kBAAOA,UAAU,aAAjB,2BACA,kBACEC,KAAK,OACLD,UAAU,eACVG,YAAY,qBACZC,KAAK,QACLO,UAAW,GACXL,UAAQ,EACRD,IAAKZ,EAAS,CACZa,UAAU,EACVM,UAAU,EACVH,QAAS,cACTI,UAAW,KAEbN,aAAa,SAEf,SAACX,EAAD,CACEE,MAAK,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAQsB,MACff,QAAS,CACPO,SAAU,4BACVG,QAAS,0CACTI,UAAW,wDAKnB,gBAAKb,UAAU,MAAf,UACE,iBAAKA,UAAU,gBAAf,WACE,kBAAOA,UAAU,aAAjB,oBACA,oBACEI,KAAK,QACLC,IAAKZ,EAAS,CAAEa,UAAU,IAC1BN,UAAU,cACVe,aAAa,GAJf,WAME,mBAAQC,MAAM,GAAGC,UAAQ,EAAzB,0BAGCC,OAAOC,OAAOlE,GAAQmE,KAAI,SAACC,EAAOC,GACjC,OACE,mBAAoBN,MAAOK,EAA3B,SACGA,GADUC,UAMnB,SAAC1B,EAAD,CACEE,MAAK,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAQ6B,MACftB,QAAS,CAAEO,SAAU,+BAM3B,mBAAQiB,QAAS7B,GA9GJ,SAAC8B,GAChBC,QAAQC,IAAIF,GACZ7B,OA4GE,yB,6BC7JN","sources":["pages/FormValidation/index.js","webpack://react-components/./src/pages/FormValidation/FormValidation.scss?7a85"],"sourcesContent":["import React, { Fragment } from \"react\";\nimport { useForm } from \"hooks\";\n\nimport \"./FormValidation.scss\";\n\nconst states = {\n  AN: \"Andaman and Nicobar Islands\",\n  AP: \"Andhra Pradesh\",\n  AR: \"Arunachal Pradesh\",\n  AS: \"Assam\",\n  BR: \"Bihar\",\n  CG: \"Chandigarh\",\n  CH: \"Chhattisgarh\",\n  DN: \"Dadra and Nagar Haveli\",\n  DD: \"Daman and Diu\",\n  DL: \"Delhi\",\n  GA: \"Goa\",\n  GJ: \"Gujarat\",\n  HR: \"Haryana\",\n  HP: \"Himachal Pradesh\",\n  JK: \"Jammu and Kashmir\",\n  JH: \"Jharkhand\",\n  KA: \"Karnataka\",\n  KL: \"Kerala\",\n  LA: \"Ladakh\",\n  LD: \"Lakshadweep\",\n  MP: \"Madhya Pradesh\",\n  MH: \"Maharashtra\",\n  MN: \"Manipur\",\n  ML: \"Meghalaya\",\n  MZ: \"Mizoram\",\n  NL: \"Nagaland\",\n  OR: \"Odisha\",\n  PY: \"Puducherry\",\n  PB: \"Punjab\",\n  RJ: \"Rajasthan\",\n  SK: \"Sikkim\",\n  TN: \"Tamil Nadu\",\n  TS: \"Telangana\",\n  TR: \"Tripura\",\n  UP: \"Uttar Pradesh\",\n  UK: \"Uttarakhand\",\n  WB: \"West Bengal\",\n};\n\nconst FormValidationPage = () => {\n  const { errors, register, handleSubmit, reset, getValue } = useForm();\n\n  const onSubmit = (data) => {\n    console.log(data);\n    reset();\n  };\n\n  const ErrorMessage = ({ error, message }) => {\n    if (!error) return null;\n    return error && <span className=\"error-msg\">{message[error.type]}</span>;\n  };\n\n  return (\n    <Fragment>\n      <h1>Form Validation</h1>\n      <div className=\"row\">\n        <div className=\"col-md-4 mb-3\">\n          <label className=\"form-label\">Username</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Enter username\"\n            name=\"userName\"\n            ref={register({ required: true })}\n            autoComplete=\"off\"\n          />\n          <ErrorMessage\n            error={errors?.userName}\n            message={{ required: \"Please enter username\" }}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-4 mb-3\">\n          <label className=\"form-label\">Email ID</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Enter email id\"\n            name=\"emailId\"\n            ref={register({\n              required: true,\n              pattern:\n                /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/,\n            })}\n            autoComplete=\"off\"\n          />\n          <ErrorMessage\n            error={errors?.emailId}\n            message={{\n              required: \"Please enter email id\",\n              pattern: \"Invalid email id\",\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-4 mb-3\">\n          <label className=\"form-label\">Phone Number</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Enter phone number\"\n            name=\"phone\"\n            maxLength={10}\n            required\n            ref={register({\n              required: true,\n              isNumber: true,\n              pattern: /^[0-9]{10}$/,\n              minLength: 10,\n            })}\n            autoComplete=\"off\"\n          />\n          <ErrorMessage\n            error={errors?.phone}\n            message={{\n              required: \"Please enter phone number\",\n              pattern: \"Phone number should contain number only\",\n              minLength: \"Phone number should contain atleast 10 digit\",\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-4 mb-3\">\n          <label className=\"form-label\">State</label>\n          <select\n            name=\"state\"\n            ref={register({ required: true })}\n            className=\"form-select\"\n            defaultValue=\"\"\n          >\n            <option value=\"\" disabled>\n              Select State\n            </option>\n            {Object.values(states).map((state, index) => {\n              return (\n                <option key={index} value={state}>\n                  {state}\n                </option>\n              );\n            })}\n          </select>\n          <ErrorMessage\n            error={errors?.state}\n            message={{ required: \"Please select state\" }}\n          />\n        </div>\n      </div>\n      {/* <input type=\"radio\" name=\"gender\" value=\"Male\" /> Male\n      <input type=\"radio\" name=\"gender\" value=\"Female\" /> Female */}\n      <button onClick={handleSubmit(onSubmit)}>Submit</button>\n    </Fragment>\n  );\n};\n\nexport default FormValidationPage;\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["states","AN","AP","AR","AS","BR","CG","CH","DN","DD","DL","GA","GJ","HR","HP","JK","JH","KA","KL","LA","LD","MP","MH","MN","ML","MZ","NL","OR","PY","PB","RJ","SK","TN","TS","TR","UP","UK","WB","useForm","errors","register","handleSubmit","reset","ErrorMessage","getValue","error","message","className","type","Fragment","placeholder","name","ref","required","autoComplete","userName","pattern","emailId","maxLength","isNumber","minLength","phone","defaultValue","value","disabled","Object","values","map","state","index","onClick","data","console","log"],"sourceRoot":""}